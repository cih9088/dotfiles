#!/bin/sh
#
# Usage: osc52 [FILE...]
#
# Copies the contents of the given files (or stdin if no files are given) to
# the terminal that runs this program.  If this program is run inside tmux(1),
# then it also copies the given contents into tmux's current clipboard buffer.
# If this program is run inside X11, then it also copies to the X11 clipboard.
#
# This is achieved by writing an OSC 52 escape sequence to the said terminal.
# The maximum length of an OSC 52 escape sequence is 100_000 bytes, of which
# 7 bytes are occupied by a "\033]52;c;" header, 1 byte by a "\a" footer, and
# 99_992 bytes by the base64-encoded result of 74_994 bytes of copyable text.
#
# In other words, this program can only copy up to 74_994 bytes of its input.
# However, in such cases, this program tries to bypass the input length limit
# by copying directly to the X11 clipboard if a $DISPLAY server is available;
# otherwise, it emits a warning (on stderr) about the number of bytes dropped.
#
# See http://en.wikipedia.org/wiki/Base64 for the 4*ceil(n/3) length formula.
# See http://sourceforge.net/p/tmux/mailman/message/32221257 for copy limits.
# See http://sourceforge.net/p/tmux/tmux-code/ci/a0295b4c2f6 for DCS in tmux.
#
# Written in 2014 by Suraj N. Kurapati <https://github.com/sunaku>
# Also documented at https://sunaku.github.io/tmux-yank-osc52.html
# Modified by Andy Cho <cih9088@gmail.com>


# https://sunaku.github.io/tmux-yank-osc52.html
# The maximum length of an OSC 52 escape sequence is 100_000 bytes, of which
# 7 bytes are occupied by a "\033]52;c;" header, 1 byte by a "\a" footer, and
# 99_992 bytes by the base64-encoded result of 74_994 bytes of copyable text
maxlen=74994

# get data either form stdin or from file
buf=$( cat "$@" )

# Copy via OSC 52 ANSI escape sequence to controlling terminal
buflen=$( printf %s "$buf" | wc -c )

# warn if exceeds maxlen
if [ "$buflen" -gt "$maxlen" ]; then
    printf "input is %d bytes too long" "$(( buflen - maxlen ))" >&2
fi

build_osc_52 () {
    # build up OSC 52 ANSI escape sequence
    esc="$1"
    esc="\033]52;c;$( printf %s "$esc" | head -c $maxlen | base64 | tr -d '\r\n' )\a"
    test -n "$TMUX" -o -z "${TERM##tmux*}" -o -z "${TERM##screen*}" && esc="\033Ptmux;\033$esc\033\\"
    printf "$esc"
}

# resolve target terminal to send escape sequence
# if we are on remote machine, send directly to SSH_TTY to transport escape sequence
# to terminal on local machine, so data lands in clipboard on our local machine
current_tty="/dev/$(ps hotty $PPID | sed -n -E '/[0-9]+/p' | xargs)"
target_tty="${SSH_TTY:-$current_tty}"

# KiTTY always appends to the clipboard, so clear it first
# https://sw.kovidgoyal.net/kitty/protocol-extensions.html#pasting-to-clipboard
printf "$( build_osc_52 "\033]52;c;!\a" )" > "$target_tty"
printf "$( build_osc_52 "$buf" )" > "$target_tty"
