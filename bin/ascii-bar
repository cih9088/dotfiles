#!/usr/bin/env bash

# copied from https://github.com/wookayin/dotfiles/blob/c656584603e242ed605d32b9974e43b759c94a88/bin/ascii-bar
# Draw an ascii bar figure from the percentage value read from stdin.
# e.g.
#    echo 17.73 | ascii-bar --width 20
#    [||||                ] 17.73 %
#

width=${1:-20}
if [[ ! $width =~ [0-9]+ ]]; then
    echo "Invalid width: $width;"; return 1;
fi

awk "

function bold() {
    printf \"\033[1m\";
}

function red() {
    printf \"\033[91m\";
}

function yellow() {
    printf \"\033[93m\";
}

function white() {
    printf \"\033[97m\";
}

function green(s) {
    printf \"\033[92m\";
}

function reset(s) {
    printf \"\033[0;39m\";
}

function red_float(s) {
    printf(\"\033[0;31m%6.2f\033[0m\", s)
}

function yellow_float(s) {
    printf(\"\033[0;93m%6.2f\033[0m\", s)
}

function white_float(s) {
    printf(\"\033[0;97m%6.2f\033[0m\", s)
}

function green_float(s) {
    printf(\"\033[0;92m%6.2f\033[0m\", s)
}

{
PERCENT=\$1;

# print ascii - bar
printf \"[\";

if (PERCENT < 50) {
    green();
}
else if (PERCENT < 75) {
    yellow();
}
else {
    red();
}

for(i=0;i<$width;++i)
    if(i/$width < PERCENT/100.0) {
        printf \"|\";
    }
    else {
        printf \" \";
    }

reset()

printf \"] \";

if (PERCENT < 50) {
    green()
}
else if (PERCENT < 75) {
    bold()
    yellow()
}
else {
    bold()
    red()
}

printf(\"%6.2f\", PERCENT)
reset()
printf \" %\";
}"
