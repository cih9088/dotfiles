#!/usr/bin/env bash

trap cleanup SIGHUP SIGINT SIGTERM EXIT

set -eu

has() {
  local verbose=0
  if [[ $1 = '-v' ]]; then
    verbose=1
    shift
  fi
  for c; do c="${c%% *}"
    if ! command -v "$c" &> /dev/null; then
      (( verbose > 0 )) && printf "\033[1;31m%s\033[0m not found.\n" "$c" >&2
      return 1
    fi
  done
}

cleanup() {
  [ -e "$_TEMP_DIR" ] && rm -rf "$_TEMP_DIR"
}

has -v gcloud fzf awk column mapfile || exit 1

_USER=""

[ ${#@} -ge 1 ] && [[ "$1" == *"@" ]] && _USER="$1" && shift

_PROJECTS=($(gcloud projects list --format="table[no-heading](projectId)"))

_TEMP_DIR=$(mktemp -d)
_INSTANCES_FIFO="${_TEMP_DIR}/pipe-$$"
mkfifo "$_INSTANCES_FIFO"

(
  echo -e "PROJECT_ID\tNAME\tZONE\tMACHINE_TYPE\tSTATUS"
  for _PROJECT in "${_PROJECTS[@]}"; do
    echo "$(
      gcloud compute instances list --project "${_PROJECT}" \
        --format="table[no-heading](name,zone,machineType,status)" \
        | sort --version-sort | sed "s/^/${_PROJECT}  /"
    )" &
  done
) >> "$_INSTANCES_FIFO" &

# mapfile -t _INSTANCE_INFOS < <(
#   fzf --exact \
#     --bind 'Ctrl-A:toggle-all,`:jump' \
#     --inline-info \
#     --multi \
#     --height=40% \
#     --header-lines=1 \
#     --layout=reverse \
#       < "$_INSTANCES_FIFO"
# )
mapfile -t _INSTANCE_INFOS < <(
  cat "$_INSTANCES_FIFO" \
    | column -t \
    | fzf --exact \
        --bind 'Ctrl-A:toggle-all,`:jump' \
        --inline-info \
        --multi \
        --height=~40% \
        --header-lines=1 \
        --layout=reverse
)

[ "${#_INSTANCE_INFOS[@]}" -eq 0 ] && exit 0

_CMDS=()
_MSGS=()
for _INSTANCE_INFO in "${_INSTANCE_INFOS[@]}"; do
  _PROJECT="$(echo "${_INSTANCE_INFO}" | awk '{print $1}')"
  _INSTANCE="$(echo "${_INSTANCE_INFO}" | awk '{print $2}')"
  _ZONE="$(echo "${_INSTANCE_INFO}" | awk '{print $3}')"
  _MACHINE_TYPE="$(echo "${_INSTANCE_INFO}" | awk '{print $4}')"

  _MSGS+=("SSH into $_PROJECT/$_USER$_INSTANCE ($_MACHINE_TYPE) in $_ZONE...")
  _CMDS+=("gcloud compute ssh $_USER$_INSTANCE --project $_PROJECT --zone $_ZONE $*")
done

if [ "${#_CMDS[@]}" -eq 1 ]; then
  echo "${_MSGS[0]}"
  # echo ${_CMDS[0]}
  command ${_CMDS[0]}
elif [ "${#_CMDS[@]}" -gt 1 ]; then
  has -v tmux xpanes || exit 1
  xpanes -t -s -c "{}" "${_CMDS[@]}"
fi
