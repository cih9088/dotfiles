#!/usr/bin/env bash

# copied from http://www.cyberciti.biz/faq/linux-list-users-command
# modified by Inhyuk Andy Cho <cih9088@gmail.com>

set -euo pipefail
trap "echo 'error: Script failed: see failed command above'" ERR

Color_Off='[0m'       # Text Reset
BRed='[1;31m'         # Red
BGreen='[1;32m'       # Green
Yellow='[0;33m'       # Yellow
BIYellow='[1;93m'     # Yellow

OPTIND=1
SYSTEM_USERS=false
LOCKED_USERS=false
GROUP_LIST=()


case "$OSTYPE" in
  linux*)
    ;;
  *)
    echo "'${OSTYPE}' is not supported OS type." >&2; exit 1
    ;;
esac

usage() {
  LESS=-FEXR less <<HELP

${BRed}SYNOPSIS${Color_Off}
    ${BRed}$(basename "$0")${Color_Off} [${BRed}-hsl${Color_Off}]


${BRed}DESCRIPTION${Color_Off}
    list users in system with easy


${BRed}OPTIONS${Color_Off}
    ${BRed}-s${Color_Off}
        show system users as well

    ${BRed}-l${Color_Off}
        show locked users (need privilege)

    ${BRed}-h${Color_Off}
        show this help message

    ${BRed}-g${Color_Off}
        comma sperated list of groups to show additionally

HELP
}

while getopts 'g:hsl' option; do
  case "$option" in
    h) usage
      exit
      ;;
    s) SYSTEM_USERS=true
      ;;
    l) LOCKED_USERS=true
      if ! [ "$EUID" -eq 0 ]; then
        echo 'Need privilege to list locked users' >&2
        exit 1
      fi
      ;;
    g) GROUP_LIST=(${OPTARG//,/ })
      ;;
    :) printf "missing argument for -%s\n" "$OPTARG" >&2
      echo "" >&2
      usage >&2
      exit 1
      ;;
    \?) printf "ilegal option: -%s\n" "$OPTARG" >&2
      echo "" >&2
      usage >&2
      exit 1
      ;;
  esac
done
shift $((OPTIND -1))
[ "${1:-}" = "--" ] && shift

_l="/etc/login.defs"
_p="/etc/passwd"

## get mini UID limit ##
l=$(grep "^UID_MIN" $_l)

## get max UID limit ##
l1=$(grep "^UID_MAX" $_l)

## use awk to print if UID >= $MIN and UID <= $MAX and shell is not /sbin/nologin   ##
echo "----------[ Normal User Accounts ]---------------"
awk -F':' -v "min=${l##UID_MIN}" -v "max=${l1##UID_MAX}" '{ if ( $3 >= min && $3 <= max  && $7 != "/sbin/nologin" ) print $0 }' "$_p" | column -s ':' -tn

echo ""
echo "----------[ Sudo Group Accounts ]---------------"
grep '^sudo:.*$' /etc/group | cut -d: -f4 | tr ',' ' '

if [[ ${#GROUP_LIST[@]} -ne 0 ]]; then
  for gr in ${GROUP_LIST[@]}; do
    echo ""
    echo "----------[ $gr Group Accounts ]---------------"
    if grep '^'$gr':.*$' /etc/group > /dev/null 2>&1; then
      grep '^'$gr':.*$' /etc/group | cut -d: -f4 | tr ',' ' '
    fi
  done
fi

if [ ${LOCKED_USERS} == true ]; then
  echo ""
  echo "---------[ Locked User Accounts ]--------------"
  shadow="/etc/shadow"
  if cat $shadow | grep '!' > /dev/null 2>&1; then
    cat $shadow | grep ! | awk -F ':' '{printf "%s ", $1} END { printf "\n" }'
  fi

  echo ""
  echo "---------[ Expired User Accounts ]-------------"
  cat $shadow | awk -F ':' -v now=$(date +%s) '{if ( length($8) > 0 && ($8 < (now / 60 / 60 / 24)) ) printf "%s ", $1} END { printf "\n"; }'
fi

if [ ${SYSTEM_USERS} == true ]; then
  echo ""
  echo "---------[ System User Accounts ]--------------"
  awk -F':' -v "min=${l##UID_MIN}" -v "max=${l1##UID_MAX}" '{ if ( !($3 >= min && $3 <= max  && $7 != "/sbin/nologin")) print $0 }' "$_p" | column -s ':' -tn
fi

