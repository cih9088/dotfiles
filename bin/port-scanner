#!/usr/bin/env bash

set -euo pipefail
trap "echo 'error: Script failed: see failed command above'" ERR

Color_Off='[0m'       # Text Reset
BRed='[1;31m'         # Red
BGreen='[1;32m'       # Green
Yellow='[0;33m'       # Yellow
BIYellow='[1;93m'     # Yellow

OPTIND=1
_DELAY=0.005

usage() {
    LESS=-FEXR less <<HELP

${BRed}SYNOPSIS${Color_Off}
    ${BRed}$(basename "$0")${Color_Off} [${BRed}-d${Color_Off} ${BGreen}delay${Color_Off}] ${BGreen}hostname or ip address${Color_Off}


${BRed}DESCRIPTION${Color_Off}
    Scan open ports


${BRed}OPTIONS${Color_Off}
    ${BRed}-d${Color_Off}
        timeout delay. default: ${_DELAY}

    ${BRed}-h${Color_Off}
        show this help message
HELP
}

while getopts 'hd:' option; do
    case "$option" in
        h) usage
            exit
            ;;
        d) _DELAY=${OPTARG}
            ;;
        :) printf "missing argument for -%s\n" "$OPTARG" >&2
            echo "" >&2
            usage >&2
            exit 1
            ;;
        \?) printf "ilegal option: -%s\n" "$OPTARG" >&2
            echo "" >&2
            usage >&2
            exit 1
            ;;
    esac
done
shift $((OPTIND -1))
[ "${1:-}" = "--" ] && shift


ip=${1?You have to specify hostname or ip address}

printf '\nOpened TCP ports: \n'
printf '\t'
for i in {1..65535}; do
    timeout ${_DELAY} bash -c "echo < /dev/tcp/$ip/$i" &>/dev/null && printf "%d, " "$i"
done

# printf '\nOpened UDP ports: \n'
# printf '\t'
# for i in {1..65535}; do
#     timeout ${_DELAY} bash -c "echo < /dev/udp/$ip/$i" &>/dev/null && printf "%d, " "$i"
# done
#
