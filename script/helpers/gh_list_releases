#!/usr/bin/env bash

set -euo pipefail

DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null && pwd )"

GH_REPO="${1}"
GH_MAX_PAGES="${2:-5}"
GH_ACCESS="${3:-${GH_ACCESS:-}}"


if [ -z "$GH_ACCESS" ]; then
  curl --silent --show-error -w "%{http_code}" \
    "https://github.com/$GH_REPO/releases?page=[1-${GH_MAX_PAGES}]" |
    ${DIR}/parser_html 'a' |
    grep 'releases/tag' |
    grep -v 'sign up' |
    awk '{print $2}' |
    sed 's|href="/'${GH_REPO}'/releases/tag/\(.*\)"|\1|'
else
  GH_ACCESS="--user $GH_ACCESS"

  # Get latest release from GitHub api
  _BODY=$(
    curl --silent --show-error -w "%{http_code}" $GH_ACCESS \
      "https://api.github.com/repos/$GH_REPO/releases"
  )
  _STATUS_CODE=$(echo "$_BODY" | tail -n 1)
  _BODY=$(echo "$_BODY" | sed \$d)

  if [ "$_STATUS_CODE" == "200" ]; then
    echo "$_BODY" |
      grep '"tag_name":' |         # Get tag line
      sed -E 's/.*"([^"]+)".*/\1/' # Pluck JSON value
  else
    echo "$_BODY" >&2
    exit "$_STATUS_CODE"
  fi
fi
