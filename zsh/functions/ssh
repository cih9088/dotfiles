if [[ $# -eq 0 ]] || [[ $# -eq 1 && $1 =~ "@$" ]]; then
    has -v fzf awk || exit 1

    _config=$HOME/.ssh/config
    targets=$(awk '
    BEGIN { current = ""; hosts[0] = "" }
    {
        if ($1 == "Host") {
            if ( current != $2 ) {
                current = $2
                hosts[length(hosts)+1] = $2
            }
    }
        if ( $1 == "HostName" && $2 ~ /[a-zA-Z]+/ ) {
            hosts[length(hosts)] = hosts[length(hosts)] " -> " $2
        }
    }
    END { for (key in hosts) { print hosts[key] } }
    ' $_config | grep -v '*' | column -t)

    exit_code=$?
    [ ${exit_code} != 0 ] && return ${exit_code}
    targets=$(echo ${targets} \
        | fzf --bind 'ctrl-a:select-all' --multi \
        --height=40% --cycle --no-sort --layout=reverse \
        --preview-window=up:2 \
        --preview='cat '"$_config"' | grep Host | \
        awk -v host={} '"'"'{
            split(host, fld, /->/)
            gsub(/[ \t]+$/, "", fld[1])
            if ($0~fld[1]) {
                getline
                gsub(/^[ \t]+/,"", $0)
                print
                getline
                if ($0 ~ /HostName/) {
                    gsub(/^[ \t]+/,"", $0)
                    print
                }
            }
        }'"'" | awk '{print $1}')
    if [ -n "${targets}" ]; then
        if [ -n "$1" ]; then
            echo ${targets} | sed "s/^/$1/" | xpanes -t -s -c "ssh -o StrictHostKeyChecking=no {}"
        else
            echo ${targets} | xpanes -t -s -c "ssh -o StrictHostKeyChecking=no {}"
        fi
    fi
else
    if ps -p $$ -o ppid= \
        | xargs -I{} ps -p {} -o comm= \
        | grep -qw tmux; then
    # Note: Options without parameter were hardcoded,
    # in order to distinguish an option's parameter from the destination.
    #
    #                   s/[[:space:]]*\(\( | spaces before options
    #     \(-[46AaCfGgKkMNnqsTtVvXxYy]\)\| | option without parameter
    #                     \(-[^[:space:]]* | option
    # \([[:space:]]\+[^[:space:]]*\)\?\)\) | parameter
    #                      [[:space:]]*\)* | spaces between options
    #                        [[:space:]]\+ | spaces before destination
    #                \([^-][^[:space:]]*\) | destination
    #                                   .* | command
    #                                 /\6/ | replace with destination
    # tmux set-option -p pane-border-format '#[bg=colour239] #[bg=colour240]#T#[bg=colour239] #[default]'
    tmux select-pane -T "$(echo "$@" \
      | sed 's/[[:space:]]*\(\(\(-[46AaCfGgKkMNnqsTtVvXxYy]\)\|\(-[^[:space:]]*\([[:space:]]\+[^[:space:]]*\)\?\)\)[[:space:]]*\)*[[:space:]]\+\([^-][^[:space:]]*\).*/\6/')"
    fi
    command ssh "$@"
fi
