# the default mode
:: default : sketchybar --trigger skhd_mode_change MODE=default

# a mode for warp operations
:: warp @ : sketchybar --trigger skhd_mode_change MODE=warp

# a mode for resizing operations
:: resize @ : sketchybar --trigger skhd_mode_change MODE=resize

# a mode for instance command
:: prefix @ : sketchybar --trigger skhd_mode_change MODE=prefix

# enter and exit modes
default                      < ctrl - s         ; prefix
prefix                       < ctrl - s         ; default
default                      < alt - space      ; warp
warp                         < alt - space      ; resize
resize                       < alt - space      ; default
resize, warp, prefix         < escape           ; default

# focus window h and j cycles, this is dependent on the monitor order beeing correct
# default, focus, resize, warp < alt - h          :  yabai -m window --focus west \
#   || (yabai -m display --focus last && yabai -m window --focus last)
# default, focus, resize, warp < alt - l          :  yabai -m window --focus east \
#   || (yabai -m display --focus first && yabai -m window --focus first)
default, resize, warp < alt - h          :  yabai -m window --focus west \
  || (yabai -m display --focus west && yabai -m window --focus last)
default, resize, warp < alt - l          :  yabai -m window --focus east \
  || (yabai -m display --focus east && yabai -m window --focus last)
default, resize, warp < alt - j          :  yabai -m window --focus south
default, resize, warp < alt - k          :  yabai -m window --focus north
default, resize, warp < alt - n          :  yabai -m window --focus stack.next
default, resize, warp < alt - p          :  yabai -m window --focus stack.prev

# focus monitor cycle around
default, resize, warp < shift + alt - h  :  yabai -m display --focus prev \
  || (yabai -m display --focus west || yabai -m display --focus last)
default, resize, warp < shift + alt - l  :  yabai -m display --focus next \
  || (yabai -m display --focus east || yabai -m display --focus last)

resize, warp < space                 :  yabai -m space --rotate 90                 # rotate tree
resize, warp < shift - space         :  yabai -m space --rotate 270                # rotate tree
resize, warp < y                     :  yabai -m space --mirror y-axis             # mirror vertical
resize, warp < x                     :  yabai -m space --mirror x-axis             # mirror horizontal
resize, warp < z                     :  yabai -m window --toggle zoom-fullscreen   # toggle window zoom fullscreen
resize, warp < p                     :  yabai -m window --toggle zoom-parent       # toggle window parent zoom
resize, warp < s                     :  yabai -m window --toggle split             # toggle window split type
# resize, warp < t                     :  yabai -m window --toggle float && \
#                                         yabai -m window --grid 6:6:1:1:4:4         # Float a centered window
# resize, warp < q                     :  yabai -m space --balance                   # equalize size of windows

# move window
warp < h                                    :  yabai -m window --warp west
warp < j                                    :  yabai -m window --warp south
warp < k                                    :  yabai -m window --warp north
warp < l                                    :  yabai -m window --warp east
warp < return                               :  yabai -m window --warp largest

# send window to desktop
warp < tab                                  :  yabai -m window --space next; yabai -m space --focus next
warp < shift - tab                          :  yabai -m window --space prev; yabai -m space --focus prev
warp < 1                                    :  yabai -m window --space 1; yabai -m space --focus 1
warp < 2                                    :  yabai -m window --space 2; yabai -m space --focus 2
warp < 3                                    :  yabai -m window --space 3; yabai -m space --focus 3
warp < 4                                    :  yabai -m window --space 4; yabai -m space --focus 4
warp < 5                                    :  yabai -m window --space 5; yabai -m space --focus 5
warp < 6                                    :  yabai -m window --space 6; yabai -m space --focus 6
warp < 7                                    :  yabai -m window --space 7; yabai -m space --focus 7
warp < 8                                    :  yabai -m window --space 8; yabai -m space --focus 8
warp < 9                                    :  yabai -m window --space 9; yabai -m space --focus 9
warp < 0                                    :  yabai -m window --space 10; yabai -m space --focus 10

# increase region size
resize < h                                  :  yabai -m window --resize left:-30:0
resize < j                                  :  yabai -m window --resize bottom:0:30
resize < k                                  :  yabai -m window --resize top:0:-30
resize < l                                  :  yabai -m window --resize right:30:0

# decrease region size
resize < shift - l                          :  yabai -m window --resize left:30:0
resize < shift - k                          :  yabai -m window --resize bottom:0:-30
resize < shift - j                          :  yabai -m window --resize top:0:30
resize < shift - h                          :  yabai -m window --resize right:-30:0


# fast focus desktop
prefix < tab : yabai -m space --focus recent; skhd -k "ctrl - s"
prefix < 1 : yabai -m space --focus 1; skhd -k "ctrl - s"
prefix < 2 : yabai -m space --focus 2; skhd -k "ctrl - s"
prefix < 3 : yabai -m space --focus 3; skhd -k "ctrl - s"
prefix < 4 : yabai -m space --focus 4; skhd -k "ctrl - s"
prefix < 5 : yabai -m space --focus 5; skhd -k "ctrl - s"
prefix < 6 : yabai -m space --focus 6; skhd -k "ctrl - s"
prefix < 7 : yabai -m space --focus 7; skhd -k "ctrl - s"
prefix < 8 : yabai -m space --focus 8; skhd -k "ctrl - s"
prefix < 9 : yabai -m space --focus 9; skhd -k "ctrl - s"
prefix < 0 : yabai -m space --focus 10; skhd -k "ctrl - s"
prefix < h : yabai -m space --focus prev; skhd -k "ctrl - s"
prefix < l : yabai -m space --focus next; skhd -k "ctrl - s"

# float / unfloat window and center on screen
prefix < t : yabai -m window --toggle float;\
  yabai -m window --layer below \
  yabai -m window --grid 6:6:1:1:4:4;\
  skhd -k "ctrl - s"

prefix < z : yabai -m window --toggle zoom-fullscreen; skhd -k "ctrl - s"

# change layout of desktop with m
prefix < m                                  :  yabai -m space --layout \
    $(yabai -m query --spaces --space | jq -r 'if .type == "bsp" then "float" elif .type == "float" then "stack" elif .type == "stack" then "bsp" else empty end');\
  sketchybar --trigger layout_change; skhd -k "ctrl - s"
# equalize size of windows with =
prefix < 0x18                               :  yabai -m space --balance; skhd -k "ctrl - s"
# toggle window split type with s
prefix < s                                  :  yabai -m window --toggle split; skhd -k "ctrl - s"
# create new spaace
prefix < c                                  :  yabai -m space --create; skhd -k "ctrl - s"
# destroy space
prefix < x                                  :  yabai -m space --destroy; skhd -k "ctrl - s"


########## global operation

# open terminal
# cmd - return : /Applications/iTerm.app/Contents/MacOS/iTerm2
cmd - return : /Applications/Alacritty.app/Contents/MacOS/alacritty

# make floating window fill screen (toggle)
ctrl + alt - return : yabai -m window --grid 1:1:0:0:1:1

# make floating window fill left-half of screen
ctrl + alt - left : yabai -m window --grid 1:2:0:0:1:1

# make floating window fill right-half of screen
ctrl + alt - right : yabai -m window --grid 1:2:1:0:1:1

# make floating window fill top-half of screen
ctrl + alt - up : yabai -m window --grid 2:1:0:0:1:1

# make floating window fill bottom-half of screen
ctrl + alt - down : yabai -m window --grid 2:1:0:1:1:1
