# get colour scheme variable
if [ ! -z "${1+x}" ]; then
  COLOUR_SCHEME="${1}"
else
  if [ -z "${COLOUR_SCHEME+x}" ]; then
    COLOUR_SCHEME=$(grep -i $( $DOTS/bin/bg-colourscheme ) $HOME/.config/alacritty/colour.yml -B 5 |
      grep \& | sed 's/.*: *&\(.*\)/\1/')
  fi
fi

# default colour scheme
[ -z "${COLOUR_SCHEME+x}" ] && COLOUR_SCHEME=default
export COLOUR_SCHEME

# change alcritty background
alacritty-theme "$COLOUR_SCHEME"

# wait a bit
sleep 0.5

# renew environment variable
export BG_LUMINANCE=$( $DOTS/bin/bg-luminance )

# renew fzf color
[ -f $DOTS/config/zsh/fzf.$COLOUR_SCHEME ] &&
  export FZF_DEFAULT_OPTS="$FZF_DEFAULT_OPTS $(cat $DOTS/config/zsh/fzf.$COLOUR_SCHEME)" ||
  export FZF_DEFAULT_OPTS="$FZF_DEFAULT_OPTS $(cat $DOTS/config/zsh/fzf.$BG_LUMINANCE)"

# renew ls color
[ -f $DOTS/config/zsh/ls_colors.$COLOUR_SCHEME ] &&
  export LS_COLORS=$(cat $DOTS/config/zsh/ls_colors.$COLOUR_SCHEME) ||
  export LS_COLORS=$(cat $DOTS/config/zsh/ls_colors.$BG_LUMINANCE)

if tmux info &> /dev/null; then
  # update tmux environment
  tmux set-environment BG_LUMINANCE $BG_LUMINANCE
  tmux set-environment COLOUR_SCHEME $COLOUR_SCHEME

  # source tmux config
  tmux source-file $HOME/.tmux.conf

  # change vim colorscheme in all tmux session
  sessions=($(tmux list-sessions -F '#{session_name}'))
  for session in "${sessions[@]}"; do
    windows=($(tmux list-windows -t ${session} -F '#{session_name}:#{window_index}'))
    is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -Ei '^[^TXZ]+ +(\S+\/)?g?(view|n?vim?x?)(diff)?$'"
    for window in "${windows[@]}"; do
      panes=($(tmux list-panes -F '#{session_name}:#{window_index}.#{pane_index}' -t $window))
      for pane in "${panes[@]}"; do
        tmux if-shell -t "$pane" "$is_vim" "send-keys -t $pane ESCAPE ENTER"
        tmux if-shell -t "$pane" "$is_vim" "send-keys -t $pane ':call ChangeBackground()' ENTER"
      done
    done
  done
fi
