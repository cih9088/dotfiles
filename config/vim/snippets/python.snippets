snippet imptf
	import tensorflow as tf

snippet impto
	import torch

snippet impnp
	import numpy as np

snippet imppi
	import pickle

snippet impplt
	import matplotlib
	matplotlib.use('Agg')
	import matplotlib.pyplot as plt

snippet pickleload
	with open(${1:file_to_dump}, 'rb') as f:
		${0:var} = pickle.load(f)

snippet pickledump
	with open(${1:file_to_dump}, 'wb') as f:
		pickle.dump(${0:var}, f)

snippet debugpy
	__import__('debugpy').listen(('0.0.0.0', ${1:5678})); __import__('debugpy').wait_for_client()

snippet tipdb
	class ForkedPdb(__import__('pdb').Pdb):
	    def interaction(self, *args, **kwargs):
	        _stdin = __import__('sys').stdin
	        try:
	            __import__('sys').stdin = open("/dev/stdin")
	            __import__('pdb').Pdb.interaction(self, *args, **kwargs)
	        finally:
	            __import__('sys').stdin = _stdin
	rank = __import__("os").environ.get("OMPI_COMM_WORLD_RANK") or __import__("os").environ.get("RANK")
	if rank and int(rank) == 0:
	    ForkedPdb().set_trace()
	__import__('torch').distributed.barrier()
